---
source: src/codegen/tests/debug_tests/expression_debugging.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

define i32 @myFunc() !dbg !2 {
entry:
  %myFunc = alloca i32, align 4, !dbg !6
  call void @llvm.dbg.declare(metadata i32* %myFunc, metadata !7, metadata !DIExpression()), !dbg !9
  store i32 0, i32* %myFunc, align 4, !dbg !6
  %load_myFunc = load i32, i32* %myFunc, align 4, !dbg !10
  switch i32 %load_myFunc, label %else [
    i32 1, label %case
    i32 2, label %case1
  ], !dbg !11

case:                                             ; preds = %entry
  store i32 1, i32* %myFunc, align 4, !dbg !12
  br label %continue, !dbg !12

case1:                                            ; preds = %entry
  store i32 1, i32* %myFunc, align 4, !dbg !13
  br label %continue, !dbg !13

else:                                             ; preds = %entry
  store i32 1, i32* %myFunc, align 4, !dbg !11
  br label %continue, !dbg !11

continue:                                         ; preds = %else, %case1, %case
  store i32 1, i32* %myFunc, align 4, !dbg !14
  %myFunc_ret = load i32, i32* %myFunc, align 4, !dbg !14
  ret i32 %myFunc_ret, !dbg !14
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!0}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!1 = !DIFile(filename: "main", directory: "")
!2 = distinct !DISubprogram(name: "myFunc", linkageName: "myFunc", scope: !1, file: !1, line: 2, type: !3, scopeLine: 3, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !5)
!3 = !DISubroutineType(flags: DIFlagPublic, types: !4)
!4 = !{null}
!5 = !{}
!6 = !DILocation(line: 3, column: 12, scope: !2)
!7 = !DILocalVariable(name: "myFunc", scope: !2, file: !1, line: 2, type: !8, align: 32)
!8 = !DIBasicType(name: "dint", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!9 = !DILocation(line: 2, column: 17, scope: !2)
!10 = !DILocation(line: 3, column: 17, scope: !2)
!11 = !DILocation(line: 9, column: 16, scope: !2)
!12 = !DILocation(line: 5, column: 16, scope: !2)
!13 = !DILocation(line: 7, column: 16, scope: !2)
!14 = !DILocation(line: 11, column: 12, scope: !2)

